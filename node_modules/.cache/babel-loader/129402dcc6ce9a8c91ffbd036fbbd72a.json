{"ast":null,"code":"var _jsxFileName = \"/Users/musubimanagement-techis/Desktop/Techis-Replit-QuickStart-Template/frontend/src/components/common/PlaceDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useMatch } from \"react-router-dom\";\nimport { fetchPlaces } from \"../../reducks/places/operations\";\nimport { getPlaces } from \"../../reducks/places/selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PlaceDetail() {\n  _s();\n\n  var _match$params$id, _match$params;\n\n  const match = useMatch(\"/place/:id\");\n  const dispatch = useDispatch();\n  const id = (_match$params$id = match === null || match === void 0 ? void 0 : (_match$params = match.params) === null || _match$params === void 0 ? void 0 : _match$params.id) !== null && _match$params$id !== void 0 ? _match$params$id : \"\";\n  useEffect(() => {\n    dispatch(fetchPlaces());\n  }, [dispatch]);\n  const places = useSelector(getPlaces);\n  const selectedPlace = useMemo(() => places.results.find(place => place.id === +id), [id, places]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"place-container\",\n      children: selectedPlace && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-place\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedPlace.image,\n          alt: \"selected place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: selectedPlace.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [selectedPlace.description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"direction-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: selectedPlace.googel_map_link,\n              target: \"_blank\",\n              children: \"Google Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"justify\"\n          },\n          children: selectedPlace.detailed_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PlaceDetail, \"srMr5kOwIzmjnzIxfHorWScSJk8=\", false, function () {\n  return [useMatch, useDispatch, useSelector];\n});\n\n_c = PlaceDetail;\nexport default PlaceDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaceDetail\");","map":{"version":3,"sources":["/Users/musubimanagement-techis/Desktop/Techis-Replit-QuickStart-Template/frontend/src/components/common/PlaceDetail.jsx"],"names":["useEffect","useMemo","useDispatch","useSelector","useMatch","fetchPlaces","getPlaces","PlaceDetail","match","dispatch","id","params","places","selectedPlace","results","find","place","image","name","description","googel_map_link","textAlign","detailed_description"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,OAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,SAAT,QAA0B,gCAA1B;;;;AAGA,SAASC,WAAT,GAAuB;AAAA;;AAAA;;AACrB,QAAMC,KAAK,GAAGJ,QAAQ,CAAC,YAAD,CAAtB;AACA,QAAMK,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,EAAE,uBAAGF,KAAH,aAAGA,KAAH,wCAAGA,KAAK,CAAEG,MAAV,kDAAG,cAAeD,EAAlB,+DAAwB,EAAhC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACJ,WAAW,EAAZ,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;AAIA,QAAMG,MAAM,GAAGT,WAAW,CAACG,SAAD,CAA1B;AAEA,QAAMO,aAAa,GAAGZ,OAAO,CAC3B,MAAMW,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAqBC,KAAD,IAAWA,KAAK,CAACN,EAAN,KAAa,CAACA,EAA7C,CADqB,EAE3B,CAACA,EAAD,EAAKE,MAAL,CAF2B,CAA7B;AAKA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGC,aAAa,iBACZ;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AACE,UAAA,GAAG,EAAEA,aAAa,CAACI,KADrB;AAEE,UAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,oBAAKJ,aAAa,CAACK;AAAnB;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,qBAAKL,aAAa,CAACM,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAA,mCACE;AAAG,cAAA,IAAI,EAAEN,aAAa,CAACO,eAAvB;AAAwC,cAAA,MAAM,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE;AAAG,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAV;AAAA,oBACGR,aAAa,CAACS;AADjB;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyBD;;GAzCQf,W;UACOH,Q,EACGF,W,EAOFC,W;;;KATRI,W;AA2CT,eAAeA,WAAf","sourcesContent":["import { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useMatch } from \"react-router-dom\";\nimport { fetchPlaces } from \"../../reducks/places/operations\";\nimport { getPlaces } from \"../../reducks/places/selectors\";\n\n\nfunction PlaceDetail() {\n  const match = useMatch(\"/place/:id\");\n  const dispatch = useDispatch();\n  const id = match?.params?.id ?? \"\";\n\n  useEffect(() => {\n    dispatch(fetchPlaces());\n  }, [dispatch]);\n\n  const places = useSelector(getPlaces);\n\n  const selectedPlace = useMemo(\n    () => places.results.find((place) => place.id === +id),\n    [id, places]\n  );\n\n  return (\n    <>\n      <div className=\"place-container\">\n        {selectedPlace && (\n          <div className=\"selected-place\">\n            <img\n              src={selectedPlace.image}\n              alt=\"selected place\"\n            />\n            <h1>{selectedPlace.name}</h1>\n            <h3>{selectedPlace.description} </h3>\n            <div className=\"direction-btn\">\n              <button>\n                <a href={selectedPlace.googel_map_link} target=\"_blank\">Google Map</a>\n              </button>\n            </div>\n\n            <p style={{ textAlign: \"justify\" }}>\n              {selectedPlace.detailed_description}\n            </p>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default PlaceDetail;\n"]},"metadata":{},"sourceType":"module"}