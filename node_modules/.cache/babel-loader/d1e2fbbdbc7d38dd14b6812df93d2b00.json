{"ast":null,"code":"import axios from \"axios\";\nvar baseURL;\nbaseURL = \"http://127.0.0.1:8000/\";\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default class API {\n  constructor() {\n    this.getPlaces = async (search, category) => {\n      let url = \"/places/\";\n      let query = new URLSearchParams();\n\n      if (search) {\n        query.append(\"search\", search);\n      }\n\n      if (category) {\n        query.append(\"category\", category);\n      }\n\n      if (query.toString() !== \"\") {\n        url += \"?\" + query.toString();\n      }\n\n      const places = await api.get(url).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return places;\n    };\n\n    this.getCategories = async () => {\n      const categories = await api.get(\"/categories/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return categories;\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/musubimanagement-techis/Desktop/Techis-Replit-QuickStart-Template/frontend/src/API.js"],"names":["axios","baseURL","api","create","headers","API","getPlaces","search","category","url","query","URLSearchParams","append","toString","places","get","then","response","data","catch","error","Error","getCategories","categories"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,OAAJ;AAEAA,OAAO,GAAG,wBAAV;AAEA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;AACvBF,EAAAA,OAAO,EAAEA,OADc;AAEvBG,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFc,CAAb,CAAZ;AAOA,eAAe,MAAMC,GAAN,CAAU;AAAA;AAAA,SACvBC,SADuB,GACX,OAAOC,MAAP,EAAeC,QAAf,KAA4B;AACtC,UAAIC,GAAG,GAAG,UAAV;AACA,UAAIC,KAAK,GAAG,IAAIC,eAAJ,EAAZ;;AACA,UAAIJ,MAAJ,EAAY;AACVG,QAAAA,KAAK,CAACE,MAAN,CAAa,QAAb,EAAuBL,MAAvB;AACD;;AACD,UAAIC,QAAJ,EAAc;AACZE,QAAAA,KAAK,CAACE,MAAN,CAAa,UAAb,EAAyBJ,QAAzB;AACD;;AAED,UAAIE,KAAK,CAACG,QAAN,OAAqB,EAAzB,EAA6B;AAC3BJ,QAAAA,GAAG,IAAI,MAAMC,KAAK,CAACG,QAAN,EAAb;AACD;;AAED,YAAMC,MAAM,GAAG,MAAMZ,GAAG,CACrBa,GADkB,CACdN,GADc,EAElBO,IAFkB,CAEZC,QAAD,IAAc;AAClB,eAAOA,QAAQ,CAACC,IAAhB;AACD,OAJkB,EAKlBC,KALkB,CAKXC,KAAD,IAAW;AAChB,cAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD,OAPkB,CAArB;AAQA,aAAON,MAAP;AACD,KAxBsB;;AAAA,SAyBvBQ,aAzBuB,GAyBP,YAAY;AAC1B,YAAMC,UAAU,GAAG,MAAMrB,GAAG,CACzBa,GADsB,CAClB,cADkB,EAEtBC,IAFsB,CAEhBC,QAAD,IAAc;AAClB,eAAOA,QAAQ,CAACC,IAAhB;AACD,OAJsB,EAKtBC,KALsB,CAKfC,KAAD,IAAW;AAChB,cAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD,OAPsB,CAAzB;AAQA,aAAOG,UAAP;AACD,KAnCsB;AAAA;;AAAA","sourcesContent":["import axios from \"axios\";\n\nvar baseURL;\n\nbaseURL = \"http://127.0.0.1:8000/\";\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default class API {\n  getPlaces = async (search, category) => {\n    let url = \"/places/\";\n    let query = new URLSearchParams();\n    if (search) {\n      query.append(\"search\", search);\n    }\n    if (category) {\n      query.append(\"category\", category);\n    }\n\n    if (query.toString() !== \"\") {\n      url += \"?\" + query.toString();\n    }\n\n    const places = await api\n      .get(url)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return places;\n  };\n  getCategories = async () => {\n    const categories = await api\n      .get(\"/categories/\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return categories;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}